# ********RoostGPT********
"""
Test generated by RoostGPT for test py-openai using AI Type Open AI and AI Model gpt-4

1. Scenario: Check if the function correctly updates the position of the plane when the direction is 1 and the current y-position is greater than 0.
    - Expected: The function should reduce the y-position by the value of 'every_time_move_distance'.

2. Scenario: Check if the function correctly handles the situation when the direction is 1 and the current y-position is less than or equal to 0.
    - Expected: The function should not change the y-position.

3. Scenario: Check if the function correctly updates the position of the plane when the direction is 2 and the current y-position plus the height of the image is less than the height of the background.
    - Expected: The function should increase the y-position by the value of 'every_time_move_distance'.

4. Scenario: Check if the function correctly handles the situation when the direction is 2 and the current y-position plus the height of the image is greater than or equal to the height of the background.
    - Expected: The function should not change the y-position.

5. Scenario: Check if the function correctly updates the position of the plane when the direction is 3 and the current x-position is greater than 0.
    - Expected: The function should reduce the x-position by the value of 'every_time_move_distance'.

6. Scenario: Check if the function correctly handles the situation when the direction is 3 and the current x-position is less than or equal to 0.
    - Expected: The function should not change the x-position.

7. Scenario: Check if the function correctly updates the position of the plane when the direction is other than 1,2,3 and the current x-position plus the width of the image is less than the width of the background.
    - Expected: The function should increase the x-position by the value of 'every_time_move_distance'.

8. Scenario: Check if the function correctly handles the situation when the direction is other than 1,2,3 and the current x-position plus the width of the image is greater than or equal to the width of the background.
    - Expected: The function should not change the x-position.

9. Scenario: Check if the function correctly handles the situation when the direction is not a valid number(1,2,3 or any other number).
    - Expected: The function should not change the position.
"""

# ********RoostGPT********
import pytest
from plan_game import Plan

def test_Plan_update():
    # Define the background size
    background_size = (480, 700)

    # Initialize a Plan instance
    plane = Plan(background_size=background_size)

    # Direction is 1 and the current y-position is greater than 0
    plane.position = [240, 200]
    plane.update(1)
    assert plane.position == [240, 200-plane.every_time_move_distance]

    # Direction is 1 and the current y-position is less than or equal to 0
    plane.position = [240, 0]
    plane.update(1)
    assert plane.position == [240, 0]

    # Direction is 2 and the current y-position plus the height of the image is less than the height of the background
    plane.position = [240, 500]
    plane.update(2)
    assert plane.position == [240, 500+plane.every_time_move_distance]

    # Direction is 2 and the current y-position plus the height of the image is greater than or equal to the height of the background
    plane.position = [240, 700-plane.image_size[1]]
    plane.update(2)
    assert plane.position == [240, 700-plane.image_size[1]]

    # Direction is 3 and the current x-position is greater than 0
    plane.position = [200, 500]
    plane.update(3)
    assert plane.position == [200-plane.every_time_move_distance, 500]

    # Direction is 3 and the current x-position is less than or equal to 0
    plane.position = [0, 500]
    plane.update(3)
    assert plane.position == [0, 500]

    # Direction is other than 1,2,3 and the current x-position plus the width of the image is less than the width of the background
    plane.position = [200, 500]
    plane.update(4)
    assert plane.position == [200+plane.every_time_move_distance, 500]

    # Direction is other than 1,2,3 and the current x-position plus the width of the image is greater than or equal to the width of the background
    plane.position = [480-plane.image_size[0], 500]
    plane.update(4)
    assert plane.position == [480-plane.image_size[0], 500]

    # Direction is not a valid number(1,2,3 or any other number)
    initial_position = plane.position
    plane.update(5)
    assert plane.position == initial_position
